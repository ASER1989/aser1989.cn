apiVersion: apps/v1
kind: Deployment
metadata:
  name: aser1989-cn
spec:
  replicas: 1
  selector:
    matchLabels:
      app: aser1989-cn
  template:
    metadata:
      labels:
        app: aser1989-cn
    spec:
      containers:
        - name:  aser1989-cn
          image: registry.cn-hangzhou.aliyuncs.com/aser/aser1989.cn:1.1.5
          imagePullPolicy: Always
          ports:
            - containerPort: 80
      imagePullSecrets:
        - name: aliyun-registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: aser1989-cn-service
  namespace: default
spec:
  selector:
    app: aser1989-cn  # 选择匹配 Deployment 中的标签
  ports:
    - protocol: TCP
      port: 80       # Service 暴露的端口
      targetPort: 80 # 发送到 Pod 内部的端口
  type: ClusterIP  # Service 类型（可改为 NodePort 或 LoadBalancer）

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: aser1989-cn-web-ingress
  namespace: default
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`www.aser1989.cn`)
      kind: Rule
      middlewares:
        - name: https-redirect
      services:
        - name: my-service
          port: 80

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: aser1989-cn-ingress
  namespace: default
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.aser1989.cn`)
      kind: Rule
      services:
        - name: aser1989-cn-service
          port: 80
      middlewares:
        - name: compress-middleware
        # - name: cache-control
  tls:
    secretName: aser1989-blog-cert
